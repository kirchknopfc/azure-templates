{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "TESTVM01",
            "metadata": {
                "description": "The name of the virtual machine."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "The size of the virtual machine."
            }
        },
        "imageReference": {
            "type": "object",
            "defaultValue": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2019-Datacenter",
                "version": "latest"
            },
            "metadata": {
                "description": "The virtual machine Image."
            }
        },
        "virtualMachineIP": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The primary ip address of the virtual machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "adminuser",
            "metadata": {
                "description": "The admin username for the virtual machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password for the virtual machine."
            }
        },
        "osDiskSizeGb": {
            "type": "int",
            "defaultValue": 64
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS"
            ]
        },
        "dataDisks": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "The data disks for the virtual machine."
            }
        },
        "fileShareStorageAccount": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Azure storage account for shared FileShares."
            }
        },
        "diagnosticStorageAccount": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the diagnostic StorageAccount."
            }
        },
        "enableBackup": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable backup for virtual machine."
            }
        },
        "recoveryServiceVaultName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Azure RecoveryServiceVault for Backup."
            }
        },
        "backupPolicyName": {
            "type": "string",
            "defaultValue": "Default",
            "metadata": {
                "description": "The name of the Azure Backup Policy for VMs."
            }
        },
        "enableMonitoring": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Deploy MonitorAgent on virtual machine."
            }
        },
        "logAnalyticsWorkspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Log Analytics workspace id for Monitoring."
            }
        },
        "logAnalyticsWorkspaceKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The Log Analytics workspace key for Monitoring."
            }
        },
        "deployPublicIpAddress": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Deploy public ip address for virtual machine."
            }
        },
        "networkResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Name of the resource group for shared network resources."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the virtual network."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the subnet in the virtual network."
            }
        },
        "deployScriptStorage": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The storage account name for the post deployment script."
            }
        },
        "deployScriptStorageKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The storage account key for the post deployment script."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
                "ServiceOwner": "TEST",
                "ServiceName": "TEST",
                "Environment": "DEMO",
                "Created": "[utcNow('yyyy-MM-ddTHH:mm:ssZ')]",
                "Status": "Active"
            },
            "metadata": {
                "description": "The resources tags for all resources"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "northeurope",
                "westeurope"
            ],
            "metadata": {
                "description": "The location for all resources."
            }
        }
    },
    "variables": {
        "vnetId": "[resourceId(parameters('networkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-nic0')]",
        "enableAcceleratedNetworking": false,
        "publicIpAddressName": "[concat(parameters('virtualMachineName'), '-pip')]",
        "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))]"
        },
        "bootDiagnosticsEnabled": {
            "enabled": false,
            "storageUri": null
        },
        "bootDiagnosticsDisable": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('diagnosticStorageAccount'), '.blob.core.windows.net/')]"
        },
        "bootDiagnostics": "[if(empty(parameters('diagnosticStorageAccount')), variables('bootDiagnosticsDisable'), variables('bootDiagnosticsEnabled'))]",
        "vmPostDeployScript": "jumpPostDeploymentScript.ps1",
        "vmPostDeployFiles": [
            "[concat('https://', parameters('deployScriptStorage'), '.blob.core.windows.net/zen-deploy/', variables('vmPostDeployScript'))]",
            "[concat('https://', parameters('deployScriptStorage'), '.blob.core.windows.net/zen-deploy/PsExec.exe')]"
        ],
        "backupName": "[concat(parameters('recoveryServiceVaultName'),'/Azure/','iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('virtualMachineName'), '/', 'vm;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('virtualMachineName'))]"
    },
    "resources": [
        {
            "condition": "[parameters('deployPublicIpAddress')]",
            "comments": "public ip address for virtual maschine",
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "network card for virtual maschine",
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('virtualMachineIP')]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "publicIPAddress": "[if(parameters('deployPublicIpAddress'),variables('publicIPAddress'), json('null'))]"
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[variables('enableAcceleratedNetworking')]"
            }
        },
        {
            "comments": "virtual maschine",
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "tags": "[parameters('tags')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'),'-osdisk')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": "[parameters('dataDisks')]"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('diagnosticStorageAccount'), '.blob.core.windows.net/')]"
                    }
                }
            },
            "identity": {
                "type": "systemAssigned"
            }
        },
        {
            "condition": "[parameters('enableMonitoring')]",
            "comments": "Deploy Microsoft Monitor Agent",
            "name": "[concat(parameters('virtualMachineName'), '/MicrosoftMonitoringAgent')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "MicrosoftMonitoringAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[parameters('logAnalyticsWorkspaceId')]"
                },
                "protectedSettings": {
                    "workspaceKey": "[parameters('logAnalyticsWorkspaceKey')]"
                }
            }
        },
        {
            "condition": "[parameters('enableBackup')]",
            "comments": "Enable Azure Backup for virtual maschine",
            "name": "[variables('backupName')]",
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "apiVersion": "2016-12-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "protectedItemType": "Microsoft.ClassicCompute/virtualMachines",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', resourceGroup().name, parameters('backupPolicyName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            }
        },
        {
            "comments": "Custom deployment script for post-deployment",
            "name": "[concat(parameters('virtualMachineName'), '/PostDeployment')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('vmPostDeployFiles')]"
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Bypass -File ./', variables('vmPostDeployScript'), ' ', parameters('fileShareStorageAccount'), ' ', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('fileShareStorageAccount')), '2019-04-01').keys[0].value)]",
                    "storageAccountName": "[parameters('deployScriptStorage')]",
                    "storageAccountKey": "[parameters('deployScriptStorageKey')]"
                }
            }
        },
        {
            "name": "[concat(parameters('virtualMachineName'),'/BGInfo')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "BGInfo",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Properties": [
                    ]
                }
            }
        }
    ],
    "outputs": {
        "virtualMachineId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
        },
        "virtualMachineName": {
            "type": "string",
            "value": "[parameters('virtualMachineName')]"
        }
    }
}